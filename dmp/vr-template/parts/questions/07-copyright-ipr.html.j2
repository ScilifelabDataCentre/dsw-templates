<div id="q-ethical-issues" class="question">
  <h3>7. How is data handling according to legal requirements safeguarded?</h3>

  <div class="answer">
    {# Open philosophy #}
    {%- set asOpenAsPossiblePath = [uuids.preservingCUuid, uuids.asOpenAsPossibleQUuid]|reply_path -%}
    {%- set asOpenAsPossibleAUuid = repliesMap[asOpenAsPossiblePath]|reply_str_value -%}
    {%- if asOpenAsPossibleAUuid == uuids.asOpenAsPossibleYesAUuid -%}
      <p>We will be working with the philosophy <em>as open as possible</em> for our data.</p>
    {%- endif -%}

    {# Can open data #}
    {%- set openImmediatelyPath = [uuids.preservingCUuid, uuids.openImmediatelyQUuid]|reply_path -%}
    {%- set openImmediatelyAUuid = repliesMap[openImmediatelyPath]|reply_str_value -%}
    {%- if openImmediatelyAUuid == uuids.openImmediatelyYesAUuid -%}
      <p>All of our data can become completely open immediately.</p>
    {%- elif openImmediatelyAUuid == uuids.openImmediatelyNoAUuid -%}
      {%- set pathPrefix = [openImmediatelyPath, uuids.openImmediatelyNoAUuid]|reply_path -%}
      {%- set notOpenLegalReasonsPath = [pathPrefix, uuids.notOpenLegalReasonsQUuid]|reply_path -%}
      {%- set notOpenLegalReasonsAUuid = repliesMap[notOpenLegalReasonsPath]|reply_str_value -%}
      {%- set notOpenBusinessReasonsPath = [pathPrefix, uuids.notOpenBusinessReasonsQUuid]|reply_path -%}
      {%- set notOpenBusinessReasonsAUuid = repliesMap[notOpenBusinessReasonsPath]|reply_str_value -%}
      {%- set notOpenOtherReasonsPath = [pathPrefix, uuids.notOpenOtherReasonsQUuid]|reply_path -%}
      {%- set notOpenOtherReasonsAUuid = repliesMap[notOpenOtherReasonsPath]|reply_str_value -%}
      {%- set notOpenBusinessReasonsOtherPath = [notOpenBusinessReasonsPath, uuids.notOpenBusinessReasonsOtherAUuid, uuids.notOpenBusinessReasonsOtherQUuid]|reply_path -%}
      {%- set notOpenBusinessReasonsOther = repliesMap[notOpenBusinessReasonsOtherPath]|reply_str_value -%}
      {%- set notOpenOtherReasonsOtherPath = [notOpenOtherReasonsPath, uuids.notOpenOtherReasonsOtherAUuid, uuids.notOpenOtherReasonsOtherQUuid]|reply_path -%}
      {%- set notOpenOtherReasonsOther = repliesMap[notOpenOtherReasonsOtherPath]|reply_str_value -%}

      {%- set legalReasons = notOpenLegalReasonsAUuid == uuids.notOpenLegalReasonsYesAUuid -%}
      {%- set businessReasonsPatents = notOpenBusinessReasonsAUuid == uuids.notOpenBusinessReasonsPatentsAUuid -%}
      {%- set businessReasonsOther = notOpenBusinessReasonsAUuid == uuids.notOpenBusinessReasonsOtherAUuid -%}
      {%- set otherReasonsPapers = notOpenOtherReasonsAUuid == uuids.notOpenOtherReasonsPapersAUuid -%}
      {%- set otherReasonsOther = notOpenOtherReasonsAUuid == uuids.notOpenOtherReasonsOtherAUuid -%}
      {%- set reasons = [legalReasons, businessReasonsPatents, businessReasonsOther, otherReasonsPapers, otherReasonsOther] -%}
      {%- set nReasons = reasons|select("true")|list|length -%}

      {%- if nReasons > 0 -%}
        <p>
        The data cannot become completely open immediately because
        {%- if nReasons == 1 -%}
          {%- if legalReasons %}
            of legal reasons.
          {%- elif businessReasonsPatents %}
            of patent-related business reasons.
          {%- elif businessReasonsOther %}
            of non-patent business reasons{{  ": " ~ notOpenBusinessReasonsOther|dot if notOpenBusinessReasonsOther else "." }}
          {%- elif otherReasonsPapers %}
            we want to publish a paper first.
          {%- elif otherReasonsOther %}
            we have other than paper-publishing reasons{{ ": " ~ notOpenOtherReasonsOther|dot if notOpenOtherReasonsOther else "." }}
          {%- endif -%}
        {%- else %}
          of:
          <ul>
            {%- if legalReasons %}
              <li>legal reasons</li>
            {%- endif -%}
            {%- if businessReasonsPatents %}
              <li>patent-related business reasons</li>
            {%- elif businessReasonsOther %}
              <li>non-patent business reasons{{ ": " ~ notOpenBusinessReasonsOther if notOpenBusinessReasonsOther else "" }}</li>
            {%- endif -%}
            {%- if otherReasonsPapers %}
              <li>we want to publish a paper first</li>
            {%- elif otherReasonsOther -%}
              <li>we have other than paper-publishing reasons{{ ": " ~ notOpenOtherReasonsOther if notOpenOtherReasonsOther else "" }}</li>
            {%- endif -%}
          </ul>
        {%- endif -%}
      {%- else -%}
        <p>The data cannot become completely open immediately.</p>
      {%- endif -%}

      {%- set notOpenLimitedEmbargoPath = [openImmediatelyPath, uuids.openImmediatelyNoAUuid, uuids.notOpenLimitedEmbargoQUuid]|reply_path -%}
      {%- set notOpenLimitedEmbargoAUuid = repliesMap[notOpenLimitedEmbargoPath]|reply_str_value -%}
      {%- if notOpenLimitedEmbargoAUuid == uuids.notOpenLimitedEmbargoIndefinitelyAUuid -%}
        <p>Limited embargo cannot be used because some restricted data will be embargoed indefinitely.</p>
      {%- elif notOpenLimitedEmbargoAUuid == uuids.notOpenLimitedEmbargoReleasedSoonAUuid -%}
        <p>Data will be released only as soon as restrictions are falling away.</p>
      {%- elif notOpenLimitedEmbargoAUuid == uuids.notOpenLimitedEmbargoYesAUuid -%}
        <p>Data that is not legally restrained will be released after a fixed time period, unconditionally.</p>
      {%- endif -%}
    {%- endif -%}

    {# Ownership #}
    {%- set ownershipPath = [uuids.legalEthicalCUuid, uuids.ownershipQUuid]|reply_path -%}
    {%- set ownershipAUuid = repliesMap[ownershipPath]|reply_str_value -%}
    {%- if ownershipAUuid == uuids.ownershipNoOwnerAUuid -%}
      <p>Our data is legally not copyrightable, there is no legal owner.</p>
    {%- elif ownershipAUuid == uuids.ownershipPIAUuid -%}
      <p>All data will be owned by the Principal Investigator.</p>
    {%- elif ownershipAUuid == uuids.ownershipInstituteAUuid -%}
      <p>All data will be owned by the institute.</p>
    {%- elif ownershipAUuid == uuids.ownershipConsortiumAUuid -%}
      <p>We have a consortium agreement that arranges Intellectual Property.</p>
    {%- elif ownershipAUuid == uuids.ownershipOtherAUuid -%}
      {%- set ownershipOtherPath = [ownershipPath, uuids.ownershipOtherAUuid, uuids.ownershipOtherQUuid]|reply_path -%}
      {%- set ownershipOther = repliesMap[ownershipOtherPath]|reply_str_value -%}
      {%- if ownershipOther -%}
        <p>We have made the following arrangements regarding the data ownership: {{ ownershipOther|dot }}</p>
      {%- endif -%}
    {%- endif -%}

    {# (Non)reference data - license #}
    {%- set usingPreexistingPath = [uuids.reusingCUuid, uuids.usingPreexistingQUuid]|reply_path -%}
    {%- set usingPreexistingAUuid = repliesMap[usingPreexistingPath]|reply_str_value -%}
    {%- if usingPreexistingAUuid == uuids.usingPreexistingYesAUuid -%}
      {%- set refDataPath = [usingPreexistingPath, uuids.usingPreexistingYesAUuid, uuids.refDataQUuid]|reply_path -%}
      {%- set refDataCount = repliesMap[refDataPath]|reply_items -%}
      {%- set nrefDataPath = [usingPreexistingPath, uuids.usingPreexistingYesAUuid, uuids.nrefDataQUuid]|reply_path -%}
      {%- set nrefDataCount = repliesMap[nrefDataPath]|reply_items -%}
      {%- set answeredRefData = [] -%}
      {%- for i in refDataCount -%}
          {%- if repliesMap[[refDataPath, i, uuids.refDataConditionsQUuid]|reply_path] -%}
            {%- do answeredRefData.append(i) -%}
          {%- endif -%}
      {%- endfor -%}
      {%- set answeredNRefData = [] -%}
      {%- for i in nrefDataCount -%}
          {%- if repliesMap[[nrefDataPath, i, uuids.nrefDataConditionsQUuid]|reply_path] -%}
            {%- do answeredNRefData.append(i) -%}
          {%- endif -%}
      {%- endfor -%}
      {%- if (answeredRefData|length + answeredNRefData|length) > 0 -%}
        <p>For the reference and non-reference data sets that we reuse, conditions are as follows:
        <ul>
          {%- for i in answeredRefData -%}
              {%- set refDataNamePath = [refDataPath, i, uuids.refDataNameQUuid]|reply_path -%}
              {%- set refDataNameReply = repliesMap[refDataNamePath] -%}
              {%- set refDataConditionsPath = [refDataPath, i, uuids.refDataConditionsQUuid]|reply_path -%}
              {%- set refDataConditionsAUuid = repliesMap[refDataConditionsPath]|reply_str_value -%}
              {%- if refDataConditionsAUuid -%}
                <li>
                  <strong>{{ macros.integrationValue(refDataNameReply, uuids.refDataNameQUuid) }}</strong>
                  <span class="separator">&ndash;</span>
                  {% if refDataConditionsAUuid == uuids.refDataConditionsCC0AUuid -%}
                    freely available for any use (public domain or CC0).
                  {%- elif refDataConditionsAUuid == uuids.refDataConditionsCCBYAUuid -%}
                    freely available with obligation to quote the source (e.g. CC-BY).
                  {%- elif refDataConditionsAUuid == uuids.refDataConditionsOtherAUuid -%}
                    {%- set refDataConditionsOtherPath = [refDataConditionsPath, uuids.refDataConditionsOtherAUuid, uuids.refDataConditionsOtherQUuid]|reply_path -%}
                    {%- set refDataConditionsOther = repliesMap[refDataConditionsOtherPath]|reply_str_value -%}
                    available under specific restrictions, which we will follow in our project{{ ": " ~ refDataConditionsOther|dot if refDataConditionsOther else "." }}
                  {%- endif -%}
                </li>
              {%- endif -%}
          {%- endfor -%}
          {%- for i in answeredNRefData -%}
              {%- set nrefDataNamePath = [nrefDataPath, i, uuids.nrefDataNameQUuid]|reply_path -%}
              {%- set nrefDataNameReply = repliesMap[nrefDataNamePath] -%}
              {%- set nrefDataConditionsPath = [nrefDataPath, i, uuids.nrefDataConditionsQUuid]|reply_path -%}
              {%- set nrefDataConditionsAUuid = repliesMap[nrefDataConditionsPath]|reply_str_value -%}
              {%- if nrefDataConditionsAUuid -%}
                <li>
                  <strong>{{ macros.integrationValue(nrefDataNameReply, uuids.nrefDataNameQUuid) }}</strong>
                  <span class="separator">&ndash;</span>
                  {% if nrefDataConditionsAUuid == uuids.nrefDataConditionsCC0AUuid -%}
                    freely available for any use (public domain or CC0).
                  {%- elif nrefDataConditionsAUuid == uuids.nrefDataConditionsCCBYAUuid -%}
                    freely available with obligation to quote the source (e.g. CC-BY).
                  {%- elif nrefDataConditionsAUuid == uuids.nrefDataConditionsOtherAUuid -%}
                    {%- set nrefDataConditionsOtherPath = [nrefDataConditionsPath, uuids.nrefDataConditionsOtherAUuid, uuids.refDataConditionsOtherQUuid]|reply_path -%}
                    {%- set nrefDataConditionsOther = repliesMap[nrefDataConditionsOtherPath]|reply_str_value -%}
                    available under specific restrictions, which we will follow in our project{{ ": " ~ nrefDataConditionsOther|dot if nrefDataConditionsOther else "." }}
                  {%- endif -%}
                </li>
              {%- endif -%}
          {%- endfor -%}
        </ul>
      {%- endif -%}
    {%- endif -%}

    {# Data processing #}
    <p>
    {%- set isSensitivePath = [uuids.legalEthicalCUuid, uuids.isSensitiveQUuid]|reply_path -%}
    {%- set isSensitive = repliesMap[isSensitivePath]|reply_str_value -%}
    {%- if isSensitive == uuids.isSensitiveYesAUuid -%}
      <h4>Data we collect</h4>
      {%- set isSensitiveYesPath = [isSensitivePath, uuids.isSensitiveYesAUuid]|reply_path -%}
      {%- set reportDPOPath = [isSensitiveYesPath, uuids.reportDPOQUuid]|reply_path -%}
      {%- set reportDPO = repliesMap[reportDPOPath]|reply_str_value -%}
      {%- if reportDPO == uuids.reportDPOYesAUuid %}
        The processing has been reported to our Data Protection Officer.
      {%- elif reportDPO == uuids.reportDPOWillAUuid %}
        The processing will be reported to our Data Protection Officer.
      {%- endif -%}
      {%- set needDPAPath = [isSensitiveYesPath, uuids.needDPAQUuid]|reply_path -%}
      {%- set needDPAAUuid = repliesMap[needDPAPath]|reply_str_value -%}
      {%- if needDPAAUuid == uuids.needDPAYesAUuid -%}
        {%- set needDPAYesListPath = [needDPAPath, uuids.needDPAYesAUuid, uuids.needDPAYesListQUuid]|reply_path -%}
        {%- set needDPAYesListCount = repliesMap[needDPAYesListPath]|reply_items -%}
        {%- if needDPAYesListCount|length > 0 -%}
        {# step through the list of Processors and agreements, after checking that
          needDPAYesListQUuid is not null. Not sure if correct but think so #}
          <p>
          {%- if needDPAYesListCount|length > 1 -%}
            The following Data Processing Agreements have been established:
          {%- else -%}
            The following Data Processing Agreement has been established:
          {%- endif -%}
          </p>
          <ul>
          {%- for i in needDPAYesListCount -%}
            {%- set pathPrefix = [needDPAYesListPath, i]|reply_path -%}
            {%- set DPAProcessorsPath = [pathPrefix, uuids.needDPAYesListProcessorQUuid]|reply_path -%}
            {%- set DPAProcessorsName = repliesMap[DPAProcessorsPath]|reply_str_value -%}
            {%- set DPAAgreementPath = [pathPrefix, uuids.needDPAYesListAgreementQUuid]|reply_path -%}
            {%- set DPAAgreementName = repliesMap[DPAAgreementPath]|reply_str_value -%}
            <li>
              <strong>Processors: </strong>{{ DPAProcessorsName if DPAProcessorsName else "(no names given)" }}
              <br>
              <strong>Agreement: </strong>{{ DPAAgreementName if DPAAgreementName else "(no agreement given)" }}
            </li>
          {%- endfor -%}
          </ul>
        {%- endif -%}
      {%- elif needDPAAUuid == uuids.needDPANoAUuid -%}
        All data processing agreements are already in place.
      {%- endif -%}
    {%- endif -%}
  </p>
  </div>
</div>
